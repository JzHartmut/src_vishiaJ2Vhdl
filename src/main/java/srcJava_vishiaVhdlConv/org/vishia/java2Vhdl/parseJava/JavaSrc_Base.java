package org.vishia.java2Vhdl.parseJava;

import java.util.LinkedList;
import java.util.List;
import org.vishia.genJavaOutClass.SrcInfo;

/**This file is generated by genJavaOut.jzTc script. */
public class JavaSrc_Base extends SrcInfo {

    
    protected JavaSrc.Classpath packageDefinition;
    
    
    
    protected List<JavaSrc.ImportStatement> importStatement;
    
    
    
    protected List<JavaSrc.ClassDefinition> classDefinition;
    
    
    
    protected List<JavaSrc.InterfaceDefinition> interfaceDefinition;
    
    
    
    protected List<JavaSrc.AnnotationDefinition> annotationDefinition;
    
    
    
    
    /**Access to parse result.*/
    public JavaSrc.Classpath get_PackageDefinition() { return packageDefinition; }
    
    
    
    
    /**Access to parse result, get the elements of the container importStatement*/
    public Iterable<JavaSrc.ImportStatement> get_importStatement() { return importStatement; }
    
    /**Access to parse result, get the size of the container importStatement.*/
    public int getSize_importStatement() { return importStatement ==null ? 0 : importStatement.size(); }
    
    
    
    
    /**Access to parse result, get the elements of the container classDefinition*/
    public Iterable<JavaSrc.ClassDefinition> get_classDefinition() { return classDefinition; }
    
    /**Access to parse result, get the size of the container classDefinition.*/
    public int getSize_classDefinition() { return classDefinition ==null ? 0 : classDefinition.size(); }
    
    
    
    
    /**Access to parse result, get the elements of the container interfaceDefinition*/
    public Iterable<JavaSrc.InterfaceDefinition> get_interfaceDefinition() { return interfaceDefinition; }
    
    /**Access to parse result, get the size of the container interfaceDefinition.*/
    public int getSize_interfaceDefinition() { return interfaceDefinition ==null ? 0 : interfaceDefinition.size(); }
    
    
    
    
    /**Access to parse result, get the elements of the container annotationDefinition*/
    public Iterable<JavaSrc.AnnotationDefinition> get_annotationDefinition() { return annotationDefinition; }
    
    /**Access to parse result, get the size of the container annotationDefinition.*/
    public int getSize_annotationDefinition() { return annotationDefinition ==null ? 0 : annotationDefinition.size(); }
    
    



  /**Class for Component classpath. */
  public static class Classpath_Base extends SrcInfo {
  
  
    
    protected List<String> packageClassName;
    
    
    
    
    /**Access to parse result, get the elements of the container packageClassName*/
    public Iterable<String> get_packageClassName() { return packageClassName; }
    
    /**Access to parse result, get the size of the container packageClassName.*/
    public int getSize_packageClassName() { return packageClassName ==null ? 0 : packageClassName.size(); }
    
    
  
  }




  /**Class for Component importStatement. */
  public static class ImportStatement_Base extends SrcInfo {
  
  
    
    protected List<String> packagePath;
    
    
    
    protected String class___;
    
    
    
    protected String allClasses;
    
    
    
    
    /**Access to parse result, get the elements of the container packagePath*/
    public Iterable<String> get_packagePath() { return packagePath; }
    
    /**Access to parse result, get the size of the container packagePath.*/
    public int getSize_packagePath() { return packagePath ==null ? 0 : packagePath.size(); }
    
    
    
    
    /**Access to parse result.*/
    public String get_class() { return class___; }
    
    
    
    
    /**Access to parse result.*/
    public String get_allClasses() { return allClasses; }
    
    
  
  }




  /**Class for Component classDefinition. */
  public static class ClassDefinition_Base extends SrcInfo {
  
  
    
    protected JavaSrc.Description description;
    
    
    
    protected String suppressWarnings;
    
    
    
    protected String isStatic;
    
    
    
    protected String isFinal;
    
    
    
    protected String isAbstract;
    
    
    
    protected String staticInstance;
    
    
    
    protected String noObject;
    
    
    
    protected String excludeInterface;
    
    
    
    protected String annotation;
    
    
    
    protected String accessRight;
    
    
    
    protected String classident;
    
    
    
    protected JavaSrc.Generic generic;
    
    
    
    protected JavaSrc.TypeIdent superclass;
    
    
    
    protected List<JavaSrc.TypeIdent> implementedInterface;
    
    
    
    protected JavaSrc.ClassContent classContent;
    
    
    
    
    /**Access to parse result.*/
    public JavaSrc.Description get_description() { return description; }
    
    
    
    
    /**Access to parse result.*/
    public String get_SuppressWarnings() { return suppressWarnings; }
    
    
    
    
    /**Access to parse result.*/
    public String get_isStatic() { return isStatic; }
    
    
    
    
    /**Access to parse result.*/
    public String get_isFinal() { return isFinal; }
    
    
    
    
    /**Access to parse result.*/
    public String get_isAbstract() { return isAbstract; }
    
    
    
    
    /**Access to parse result.*/
    public String get_staticInstance() { return staticInstance; }
    
    
    
    
    /**Access to parse result.*/
    public String get_noObject() { return noObject; }
    
    
    
    
    /**Access to parse result.*/
    public String get_ExcludeInterface() { return excludeInterface; }
    
    
    
    
    /**Access to parse result.*/
    public String get_Annotation() { return annotation; }
    
    
    
    
    /**Access to parse result.*/
    public String get_AccessRight() { return accessRight; }
    
    
    
    
    /**Access to parse result.*/
    public String get_classident() { return classident; }
    
    
    
    
    /**Access to parse result.*/
    public JavaSrc.Generic get_generic() { return generic; }
    
    
    
    
    /**Access to parse result.*/
    public JavaSrc.TypeIdent get_Superclass() { return superclass; }
    
    
    
    
    /**Access to parse result, get the elements of the container ImplementedInterface*/
    public Iterable<JavaSrc.TypeIdent> get_ImplementedInterface() { return implementedInterface; }
    
    /**Access to parse result, get the size of the container ImplementedInterface.*/
    public int getSize_ImplementedInterface() { return implementedInterface ==null ? 0 : implementedInterface.size(); }
    
    
    
    
    /**Access to parse result.*/
    public JavaSrc.ClassContent get_classContent() { return classContent; }
    
    
  
  }




  /**Class for Component interfaceDefinition. */
  public static class InterfaceDefinition_Base extends SrcInfo {
  
  
    
    protected String suppressWarnings;
    
    
    
    protected JavaSrc.Description description;
    
    
    
    protected String isStatic;
    
    
    
    protected String isFinal;
    
    
    
    protected String isAbstract;
    
    
    
    protected String staticInstance;
    
    
    
    protected String noObject;
    
    
    
    protected String excludeInterface;
    
    
    
    protected String annotation;
    
    
    
    protected String accessRight;
    
    
    
    protected String classident;
    
    
    
    protected JavaSrc.Generic generic;
    
    
    
    protected List<String> superInterface;
    
    
    
    protected List<JavaSrc.EnumDefinition> enumDefinition;
    
    
    
    protected List<JavaSrc.VariableInstance> variableDefinition;
    
    
    
    protected List<JavaSrc.MethodDefinition> methodDefinition;
    
    
    
    protected List<JavaSrc.InterfaceDefinition> interfaceDefinition;
    
    
    
    protected List<JavaSrc.AnnotationDefinition> annotationDefinition;
    
    
    
    protected List<JavaSrc.ClassDefinition> classDefinition;
    
    
    
    
    /**Access to parse result.*/
    public String get_SuppressWarnings() { return suppressWarnings; }
    
    
    
    
    /**Access to parse result.*/
    public JavaSrc.Description get_description() { return description; }
    
    
    
    
    /**Access to parse result.*/
    public String get_isStatic() { return isStatic; }
    
    
    
    
    /**Access to parse result.*/
    public String get_isFinal() { return isFinal; }
    
    
    
    
    /**Access to parse result.*/
    public String get_isAbstract() { return isAbstract; }
    
    
    
    
    /**Access to parse result.*/
    public String get_staticInstance() { return staticInstance; }
    
    
    
    
    /**Access to parse result.*/
    public String get_noObject() { return noObject; }
    
    
    
    
    /**Access to parse result.*/
    public String get_ExcludeInterface() { return excludeInterface; }
    
    
    
    
    /**Access to parse result.*/
    public String get_Annotation() { return annotation; }
    
    
    
    
    /**Access to parse result.*/
    public String get_AccessRight() { return accessRight; }
    
    
    
    
    /**Access to parse result.*/
    public String get_classident() { return classident; }
    
    
    
    
    /**Access to parse result.*/
    public JavaSrc.Generic get_generic() { return generic; }
    
    
    
    
    /**Access to parse result, get the elements of the container SuperInterface*/
    public Iterable<String> get_SuperInterface() { return superInterface; }
    
    /**Access to parse result, get the size of the container SuperInterface.*/
    public int getSize_SuperInterface() { return superInterface ==null ? 0 : superInterface.size(); }
    
    
    
    
    /**Access to parse result, get the elements of the container enumDefinition*/
    public Iterable<JavaSrc.EnumDefinition> get_enumDefinition() { return enumDefinition; }
    
    /**Access to parse result, get the size of the container enumDefinition.*/
    public int getSize_enumDefinition() { return enumDefinition ==null ? 0 : enumDefinition.size(); }
    
    
    
    
    /**Access to parse result, get the elements of the container variableDefinition*/
    public Iterable<JavaSrc.VariableInstance> get_variableDefinition() { return variableDefinition; }
    
    /**Access to parse result, get the size of the container variableDefinition.*/
    public int getSize_variableDefinition() { return variableDefinition ==null ? 0 : variableDefinition.size(); }
    
    
    
    
    /**Access to parse result, get the elements of the container methodDefinition*/
    public Iterable<JavaSrc.MethodDefinition> get_methodDefinition() { return methodDefinition; }
    
    /**Access to parse result, get the size of the container methodDefinition.*/
    public int getSize_methodDefinition() { return methodDefinition ==null ? 0 : methodDefinition.size(); }
    
    
    
    
    /**Access to parse result, get the elements of the container interfaceDefinition*/
    public Iterable<JavaSrc.InterfaceDefinition> get_interfaceDefinition() { return interfaceDefinition; }
    
    /**Access to parse result, get the size of the container interfaceDefinition.*/
    public int getSize_interfaceDefinition() { return interfaceDefinition ==null ? 0 : interfaceDefinition.size(); }
    
    
    
    
    /**Access to parse result, get the elements of the container annotationDefinition*/
    public Iterable<JavaSrc.AnnotationDefinition> get_annotationDefinition() { return annotationDefinition; }
    
    /**Access to parse result, get the size of the container annotationDefinition.*/
    public int getSize_annotationDefinition() { return annotationDefinition ==null ? 0 : annotationDefinition.size(); }
    
    
    
    
    /**Access to parse result, get the elements of the container classDefinition*/
    public Iterable<JavaSrc.ClassDefinition> get_classDefinition() { return classDefinition; }
    
    /**Access to parse result, get the size of the container classDefinition.*/
    public int getSize_classDefinition() { return classDefinition ==null ? 0 : classDefinition.size(); }
    
    
  
  }




  /**Class for Component annotationDefinition. */
  public static class AnnotationDefinition_Base extends SrcInfo {
  
  
    
    protected List<String> suppressWarnings;
    
    
    
    protected String rententionPolicy;
    
    
    
    protected JavaSrc.Description description;
    
    
    
    protected String ident;
    
    
    
    protected List<String> param;
    
    
    
    protected List<JavaSrc.Type> type;
    
    
    
    
    /**Access to parse result, get the elements of the container SuppressWarnings*/
    public Iterable<String> get_SuppressWarnings() { return suppressWarnings; }
    
    /**Access to parse result, get the size of the container SuppressWarnings.*/
    public int getSize_SuppressWarnings() { return suppressWarnings ==null ? 0 : suppressWarnings.size(); }
    
    
    
    
    /**Access to parse result.*/
    public String get_RententionPolicy() { return rententionPolicy; }
    
    
    
    
    /**Access to parse result.*/
    public JavaSrc.Description get_description() { return description; }
    
    
    
    
    /**Access to parse result.*/
    public String get_ident() { return ident; }
    
    
    
    
    /**Access to parse result, get the elements of the container param*/
    public Iterable<String> get_param() { return param; }
    
    /**Access to parse result, get the size of the container param.*/
    public int getSize_param() { return param ==null ? 0 : param.size(); }
    
    
    
    
    /**Access to parse result, get the elements of the container type*/
    public Iterable<JavaSrc.Type> get_type() { return type; }
    
    /**Access to parse result, get the size of the container type.*/
    public int getSize_type() { return type ==null ? 0 : type.size(); }
    
    
  
  }




  /**Class for Component AccessRight. */
  public static class AccessRight_Base extends SrcInfo {
  
  
    
    protected String accessRight;
    
    
    
    
    /**Access to parse result.*/
    public String get_AccessRight() { return accessRight; }
    
    
  
  }




  /**Class for Component Expression. */
  public static class Expression_Base extends SrcInfo {
  
  
    
    protected List<JavaSrc.ExprPart> exprPart;
    
    
    
    protected JavaSrc.TrueFalseValue trueFalseValue;
    
    
    
    
    /**Access to parse result, get the elements of the container ExprPart*/
    public Iterable<JavaSrc.ExprPart> get_ExprPart() { return exprPart; }
    
    /**Access to parse result, get the size of the container ExprPart.*/
    public int getSize_ExprPart() { return exprPart ==null ? 0 : exprPart.size(); }
    
    
    
    
    /**Access to parse result.*/
    public JavaSrc.TrueFalseValue get_TrueFalseValue() { return trueFalseValue; }
    
    
  
  }




  /**Class for Component Java4CAnnotationClass. */
  public static class Java4CAnnotationClass_Base extends SrcInfo {
  
  
    
    protected String staticInstance;
    
    
    
    protected String noObject;
    
    
    
    protected String excludeInterface;
    
    
    
    
    /**Access to parse result.*/
    public String get_staticInstance() { return staticInstance; }
    
    
    
    
    /**Access to parse result.*/
    public String get_noObject() { return noObject; }
    
    
    
    
    /**Access to parse result.*/
    public String get_ExcludeInterface() { return excludeInterface; }
    
    
  
  }




  /**Class for Component Java4CAnnotationMethod. */
  public static class Java4CAnnotationMethod_Base extends SrcInfo {
  
  
    
    protected String string;
    
    
    
    protected String instanceTypeAnnot;
    
    
    
    protected String embeddedTypeAnnot;
    
    
    
    protected String stackSize;
    
    
    
    protected List<Integer> bytes;
    
    
    
    protected List<String> typeStack;
    
    
    
    
    /**Access to parse result.*/
    public String get_string() { return string; }
    
    
    
    
    /**Access to parse result.*/
    public String get_instanceTypeAnnot() { return instanceTypeAnnot; }
    
    
    
    
    /**Access to parse result.*/
    public String get_embeddedTypeAnnot() { return embeddedTypeAnnot; }
    
    
    
    
    /**Access to parse result.*/
    public String get_stackSize() { return stackSize; }
    
    
    
    
    /**Access to parse result, get the elements of the container bytes*/
    public Iterable<Integer> get_bytes() { return bytes; }
    
    /**Access to parse result, get the size of the container bytes.*/
    public int getSize_bytes() { return bytes ==null ? 0 : bytes.size(); }
    
    
    
    
    /**Access to parse result, get the elements of the container typeStack*/
    public Iterable<String> get_typeStack() { return typeStack; }
    
    /**Access to parse result, get the size of the container typeStack.*/
    public int getSize_typeStack() { return typeStack ==null ? 0 : typeStack.size(); }
    
    
  
  }




  /**Class for Component Java4CAnnotationType. */
  public static class Java4CAnnotationType_Base extends SrcInfo {
  
  
    
    protected int fixArraySize;
    
    
    
    protected String string;
    
    
    
    
    /**Access to parse result.*/
    public int get_fixArraySize() { return fixArraySize; }
    
    
    
    
    /**Access to parse result.*/
    public String get_string() { return string; }
    
    
  
  }




  /**Class for Component Java4CAnnotationVariable. */
  public static class Java4CAnnotationVariable_Base extends SrcInfo {
  
  
    
    protected String string;
    
    
    
    protected String instanceType;
    
    
    
    protected int stringBuilderInStack;
    
    
    
    protected String stringBuilderInThCxt;
    
    
    
    protected String inThCxtRet;
    
    
    
    protected String inThCxtLocal;
    
    
    
    
    /**Access to parse result.*/
    public String get_string() { return string; }
    
    
    
    
    /**Access to parse result.*/
    public String get_InstanceType() { return instanceType; }
    
    
    
    
    /**Access to parse result.*/
    public int get_StringBuilderInStack() { return stringBuilderInStack; }
    
    
    
    
    /**Access to parse result.*/
    public String get_StringBuilderInThCxt() { return stringBuilderInThCxt; }
    
    
    
    
    /**Access to parse result.*/
    public String get_InThCxtRet() { return inThCxtRet; }
    
    
    
    
    /**Access to parse result.*/
    public String get_InThCxtLocal() { return inThCxtLocal; }
    
    
  
  }




  /**Class for Component ModifierClass. */
  public static class ModifierClass_Base extends SrcInfo {
  
  
    
    protected String isStatic;
    
    
    
    protected String isFinal;
    
    
    
    protected String isAbstract;
    
    
    
    protected String staticInstance;
    
    
    
    protected String noObject;
    
    
    
    protected String excludeInterface;
    
    
    
    protected String annotation;
    
    
    
    protected String accessRight;
    
    
    
    
    /**Access to parse result.*/
    public String get_isStatic() { return isStatic; }
    
    
    
    
    /**Access to parse result.*/
    public String get_isFinal() { return isFinal; }
    
    
    
    
    /**Access to parse result.*/
    public String get_isAbstract() { return isAbstract; }
    
    
    
    
    /**Access to parse result.*/
    public String get_staticInstance() { return staticInstance; }
    
    
    
    
    /**Access to parse result.*/
    public String get_noObject() { return noObject; }
    
    
    
    
    /**Access to parse result.*/
    public String get_ExcludeInterface() { return excludeInterface; }
    
    
    
    
    /**Access to parse result.*/
    public String get_Annotation() { return annotation; }
    
    
    
    
    /**Access to parse result.*/
    public String get_AccessRight() { return accessRight; }
    
    
  
  }




  /**Class for Component ModifierMethod. */
  public static class ModifierMethod_Base extends SrcInfo {
  
  
    
    protected String isSynchronized;
    
    
    
    protected String isStatic;
    
    
    
    protected String isFinal;
    
    
    
    protected String isAbstract;
    
    
    
    protected String accessPlolicy;
    
    
    
    protected String isReadonlyRet;
    
    
    
    protected String isReadonly;
    
    
    
    protected int fixArraySize;
    
    
    
    protected String string;
    
    
    
    protected String instanceTypeAnnot;
    
    
    
    protected String embeddedTypeAnnot;
    
    
    
    protected String stackSize;
    
    
    
    protected List<Integer> bytes;
    
    
    
    protected List<String> typeStack;
    
    
    
    protected String a_Override;
    
    
    
    protected String annotation;
    
    
    
    protected String accessRight;
    
    
    
    
    /**Access to parse result.*/
    public String get_isSynchronized() { return isSynchronized; }
    
    
    
    
    /**Access to parse result.*/
    public String get_isStatic() { return isStatic; }
    
    
    
    
    /**Access to parse result.*/
    public String get_isFinal() { return isFinal; }
    
    
    
    
    /**Access to parse result.*/
    public String get_isAbstract() { return isAbstract; }
    
    
    
    
    /**Access to parse result.*/
    public String get_accessPlolicy() { return accessPlolicy; }
    
    
    
    
    /**Access to parse result.*/
    public String get_isReadonlyRet() { return isReadonlyRet; }
    
    
    
    
    /**Access to parse result.*/
    public String get_isReadonly() { return isReadonly; }
    
    
    
    
    /**Access to parse result.*/
    public int get_fixArraySize() { return fixArraySize; }
    
    
    
    
    /**Access to parse result.*/
    public String get_string() { return string; }
    
    
    
    
    /**Access to parse result.*/
    public String get_instanceTypeAnnot() { return instanceTypeAnnot; }
    
    
    
    
    /**Access to parse result.*/
    public String get_embeddedTypeAnnot() { return embeddedTypeAnnot; }
    
    
    
    
    /**Access to parse result.*/
    public String get_stackSize() { return stackSize; }
    
    
    
    
    /**Access to parse result, get the elements of the container bytes*/
    public Iterable<Integer> get_bytes() { return bytes; }
    
    /**Access to parse result, get the size of the container bytes.*/
    public int getSize_bytes() { return bytes ==null ? 0 : bytes.size(); }
    
    
    
    
    /**Access to parse result, get the elements of the container typeStack*/
    public Iterable<String> get_typeStack() { return typeStack; }
    
    /**Access to parse result, get the size of the container typeStack.*/
    public int getSize_typeStack() { return typeStack ==null ? 0 : typeStack.size(); }
    
    
    
    
    /**Access to parse result.*/
    public String get_A_Override() { return a_Override; }
    
    
    
    
    /**Access to parse result.*/
    public String get_Annotation() { return annotation; }
    
    
    
    
    /**Access to parse result.*/
    public String get_AccessRight() { return accessRight; }
    
    
  
  }




  /**Class for Component ModifierVariable. */
  public static class ModifierVariable_Base extends SrcInfo {
  
  
    
    protected String isStatic;
    
    
    
    protected String isFinal;
    
    
    
    protected String isVolatile;
    
    
    
    protected String isTransient;
    
    
    
    protected List<String> accessPlolicy;
    
    
    
    protected String isReadonly;
    
    
    
    protected List<JavaSrc.Java4CAnnotationVariable> java4CAnnotationVariable;
    
    
    
    protected List<JavaSrc.Java4CAnnotationType> java4CAnnotationType;
    
    
    
    protected List<String> annotation;
    
    
    
    protected String accessRight;
    
    
    
    
    /**Access to parse result.*/
    public String get_isStatic() { return isStatic; }
    
    
    
    
    /**Access to parse result.*/
    public String get_isFinal() { return isFinal; }
    
    
    
    
    /**Access to parse result.*/
    public String get_isVolatile() { return isVolatile; }
    
    
    
    
    /**Access to parse result.*/
    public String get_isTransient() { return isTransient; }
    
    
    
    
    /**Access to parse result, get the elements of the container accessPlolicy*/
    public Iterable<String> get_accessPlolicy() { return accessPlolicy; }
    
    /**Access to parse result, get the size of the container accessPlolicy.*/
    public int getSize_accessPlolicy() { return accessPlolicy ==null ? 0 : accessPlolicy.size(); }
    
    
    
    
    /**Access to parse result.*/
    public String get_isReadonly() { return isReadonly; }
    
    
    
    
    /**Access to parse result, get the elements of the container Java4CAnnotationVariable*/
    public Iterable<JavaSrc.Java4CAnnotationVariable> get_Java4CAnnotationVariable() { return java4CAnnotationVariable; }
    
    /**Access to parse result, get the size of the container Java4CAnnotationVariable.*/
    public int getSize_Java4CAnnotationVariable() { return java4CAnnotationVariable ==null ? 0 : java4CAnnotationVariable.size(); }
    
    
    
    
    /**Access to parse result, get the elements of the container Java4CAnnotationType*/
    public Iterable<JavaSrc.Java4CAnnotationType> get_Java4CAnnotationType() { return java4CAnnotationType; }
    
    /**Access to parse result, get the size of the container Java4CAnnotationType.*/
    public int getSize_Java4CAnnotationType() { return java4CAnnotationType ==null ? 0 : java4CAnnotationType.size(); }
    
    
    
    
    /**Access to parse result, get the elements of the container Annotation*/
    public Iterable<String> get_Annotation() { return annotation; }
    
    /**Access to parse result, get the size of the container Annotation.*/
    public int getSize_Annotation() { return annotation ==null ? 0 : annotation.size(); }
    
    
    
    
    /**Access to parse result.*/
    public String get_AccessRight() { return accessRight; }
    
    
  
  }




  /**Class for Component TrueFalseValue. */
  public static class TrueFalseValue_Base extends SrcInfo {
  
  
    
    protected JavaSrc.Expression trueExpression;
    
    
    
    protected JavaSrc.Expression falseExpression;
    
    
    
    
    /**Access to parse result.*/
    public JavaSrc.Expression get_trueExpression() { return trueExpression; }
    
    
    
    
    /**Access to parse result.*/
    public JavaSrc.Expression get_falseExpression() { return falseExpression; }
    
    
  
  }




  /**Class for Component actualArguments. */
  public static class ActualArguments_Base extends SrcInfo {
  
  
    
    protected List<JavaSrc.Expression> expression;
    
    
    
    
    /**Access to parse result, get the elements of the container Expression*/
    public Iterable<JavaSrc.Expression> get_Expression() { return expression; }
    
    /**Access to parse result, get the size of the container Expression.*/
    public int getSize_Expression() { return expression ==null ? 0 : expression.size(); }
    
    
  
  }




  /**Class for Component annotation. */
  public static class Annotation_Base extends SrcInfo {
  
  
    
    protected List<String> suppressWarnings;
    
    
    
    
    /**Access to parse result, get the elements of the container SuppressWarnings*/
    public Iterable<String> get_SuppressWarnings() { return suppressWarnings; }
    
    /**Access to parse result, get the size of the container SuppressWarnings.*/
    public int getSize_SuppressWarnings() { return suppressWarnings ==null ? 0 : suppressWarnings.size(); }
    
    
  
  }




  /**Class for Component argument. */
  public static class Argument_Base extends SrcInfo {
  
  
    
    protected JavaSrc.ModifierVariable modifierVariable;
    
    
    
    protected JavaSrc.Type type;
    
    
    
    protected String variableName;
    
    
    
    protected String array;
    
    
    
    
    /**Access to parse result.*/
    public JavaSrc.ModifierVariable get_ModifierVariable() { return modifierVariable; }
    
    
    
    
    /**Access to parse result.*/
    public JavaSrc.Type get_type() { return type; }
    
    
    
    
    /**Access to parse result.*/
    public String get_variableName() { return variableName; }
    
    
    
    
    /**Access to parse result.*/
    public String get_array() { return array; }
    
    
  
  }




  /**Class for Component argumentList. */
  public static class ArgumentList_Base extends SrcInfo {
  
  
    
    protected List<JavaSrc.Argument> argument;
    
    
    
    
    /**Access to parse result, get the elements of the container argument*/
    public Iterable<JavaSrc.Argument> get_argument() { return argument; }
    
    /**Access to parse result, get the size of the container argument.*/
    public int getSize_argument() { return argument ==null ? 0 : argument.size(); }
    
    
  
  }




  /**Class for Component arrayElementAccess. */
  public static class ArrayElementAccess_Base extends SrcInfo {
  
  
    
    protected List<JavaSrc.Expression> expression;
    
    
    
    
    /**Access to parse result, get the elements of the container Expression*/
    public Iterable<JavaSrc.Expression> get_Expression() { return expression; }
    
    /**Access to parse result, get the size of the container Expression.*/
    public int getSize_Expression() { return expression ==null ? 0 : expression.size(); }
    
    
  
  }




  /**Class for Component caseExpr. */
  public static class CaseExpr_Base extends SrcInfo {
  
  
    
    protected List<JavaSrc.Expression> expression;
    
    
    
    protected List<JavaSrc.ClassDefinition> classDefinition;
    
    
    
    protected List<JavaSrc.Statement> statement;
    
    
    
    
    /**Access to parse result, get the elements of the container Expression*/
    public Iterable<JavaSrc.Expression> get_Expression() { return expression; }
    
    /**Access to parse result, get the size of the container Expression.*/
    public int getSize_Expression() { return expression ==null ? 0 : expression.size(); }
    
    
    
    
    /**Access to parse result, get the elements of the container classDefinition*/
    public Iterable<JavaSrc.ClassDefinition> get_classDefinition() { return classDefinition; }
    
    /**Access to parse result, get the size of the container classDefinition.*/
    public int getSize_classDefinition() { return classDefinition ==null ? 0 : classDefinition.size(); }
    
    
    
    
    /**Access to parse result, get the elements of the container statement*/
    public Iterable<JavaSrc.Statement> get_statement() { return statement; }
    
    /**Access to parse result, get the size of the container statement.*/
    public int getSize_statement() { return statement ==null ? 0 : statement.size(); }
    
    
  
  }




  /**Class for Component catchBlock. */
  public static class CatchBlock_Base extends SrcInfo {
  
  
    
    protected JavaSrc.TypeIdent exceptionType;
    
    
    
    protected String exceptionVariable;
    
    
    
    protected JavaSrc.StatementBlock statementBlock;
    
    
    
    
    /**Access to parse result.*/
    public JavaSrc.TypeIdent get_ExceptionType() { return exceptionType; }
    
    
    
    
    /**Access to parse result.*/
    public String get_exceptionVariable() { return exceptionVariable; }
    
    
    
    
    /**Access to parse result.*/
    public JavaSrc.StatementBlock get_statementBlock() { return statementBlock; }
    
    
  
  }




  /**Class for Component classContent. */
  public static class ClassContent_Base extends SrcInfo {
  
  
    
    protected List<JavaSrc.EnumDefinition> enumDefinition;
    
    
    
    protected List<JavaSrc.ClassDefinition> classDefinition;
    
    
    
    protected List<JavaSrc.InterfaceDefinition> interfaceDefinition;
    
    
    
    protected List<JavaSrc.VariableInstance> variableDefinition;
    
    
    
    protected List<JavaSrc.MethodDefinition> methodDefinition;
    
    
    
    protected List<JavaSrc.ConstructorDefinition> constructorDefinition;
    
    
    
    protected List<JavaSrc.AnnotationDefinition> annotationDefinition;
    
    
    
    protected List<JavaSrc.StatementBlock> initializingBlockStatic;
    
    
    
    protected List<JavaSrc.StatementBlock> initializingBlock;
    
    
    
    
    /**Access to parse result, get the elements of the container enumDefinition*/
    public Iterable<JavaSrc.EnumDefinition> get_enumDefinition() { return enumDefinition; }
    
    /**Access to parse result, get the size of the container enumDefinition.*/
    public int getSize_enumDefinition() { return enumDefinition ==null ? 0 : enumDefinition.size(); }
    
    
    
    
    /**Access to parse result, get the elements of the container classDefinition*/
    public Iterable<JavaSrc.ClassDefinition> get_classDefinition() { return classDefinition; }
    
    /**Access to parse result, get the size of the container classDefinition.*/
    public int getSize_classDefinition() { return classDefinition ==null ? 0 : classDefinition.size(); }
    
    
    
    
    /**Access to parse result, get the elements of the container interfaceDefinition*/
    public Iterable<JavaSrc.InterfaceDefinition> get_interfaceDefinition() { return interfaceDefinition; }
    
    /**Access to parse result, get the size of the container interfaceDefinition.*/
    public int getSize_interfaceDefinition() { return interfaceDefinition ==null ? 0 : interfaceDefinition.size(); }
    
    
    
    
    /**Access to parse result, get the elements of the container variableDefinition*/
    public Iterable<JavaSrc.VariableInstance> get_variableDefinition() { return variableDefinition; }
    
    /**Access to parse result, get the size of the container variableDefinition.*/
    public int getSize_variableDefinition() { return variableDefinition ==null ? 0 : variableDefinition.size(); }
    
    
    
    
    /**Access to parse result, get the elements of the container methodDefinition*/
    public Iterable<JavaSrc.MethodDefinition> get_methodDefinition() { return methodDefinition; }
    
    /**Access to parse result, get the size of the container methodDefinition.*/
    public int getSize_methodDefinition() { return methodDefinition ==null ? 0 : methodDefinition.size(); }
    
    
    
    
    /**Access to parse result, get the elements of the container constructorDefinition*/
    public Iterable<JavaSrc.ConstructorDefinition> get_constructorDefinition() { return constructorDefinition; }
    
    /**Access to parse result, get the size of the container constructorDefinition.*/
    public int getSize_constructorDefinition() { return constructorDefinition ==null ? 0 : constructorDefinition.size(); }
    
    
    
    
    /**Access to parse result, get the elements of the container annotationDefinition*/
    public Iterable<JavaSrc.AnnotationDefinition> get_annotationDefinition() { return annotationDefinition; }
    
    /**Access to parse result, get the size of the container annotationDefinition.*/
    public int getSize_annotationDefinition() { return annotationDefinition ==null ? 0 : annotationDefinition.size(); }
    
    
    
    
    /**Access to parse result, get the elements of the container initializingBlockStatic*/
    public Iterable<JavaSrc.StatementBlock> get_initializingBlockStatic() { return initializingBlockStatic; }
    
    /**Access to parse result, get the size of the container initializingBlockStatic.*/
    public int getSize_initializingBlockStatic() { return initializingBlockStatic ==null ? 0 : initializingBlockStatic.size(); }
    
    
    
    
    /**Access to parse result, get the elements of the container initializingBlock*/
    public Iterable<JavaSrc.StatementBlock> get_initializingBlock() { return initializingBlock; }
    
    /**Access to parse result, get the size of the container initializingBlock.*/
    public int getSize_initializingBlock() { return initializingBlock ==null ? 0 : initializingBlock.size(); }
    
    
  
  }




  /**Class for Component constArray. */
  public static class ConstArray_Base extends SrcInfo {
  
  
    
    protected List<JavaSrc.Expression> expression;
    
    
    
    protected List<JavaSrc.ConstArray> constArray;
    
    
    
    
    /**Access to parse result, get the elements of the container Expression*/
    public Iterable<JavaSrc.Expression> get_Expression() { return expression; }
    
    /**Access to parse result, get the size of the container Expression.*/
    public int getSize_Expression() { return expression ==null ? 0 : expression.size(); }
    
    
    
    
    /**Access to parse result, get the elements of the container constArray*/
    public Iterable<JavaSrc.ConstArray> get_constArray() { return constArray; }
    
    /**Access to parse result, get the size of the container constArray.*/
    public int getSize_constArray() { return constArray ==null ? 0 : constArray.size(); }
    
    
  
  }




  /**Class for Component constNumber. */
  public static class ConstNumber_Base extends SrcInfo {
  
  
    
    protected String sNumber;
    
    
    
    protected int hexNumber;
    
    
    
    protected int hexNumberNegative;
    
    
    
    protected String booleanConst;
    
    
    
    protected int intNumber;
    
    
    
    protected String valueFormat;
    
    
    
    protected float floatNumber;
    
    
    
    protected float doubleNumber;
    
    
    
    
    /**Access to parse result.*/
    public String get_sNumber() { return sNumber; }
    
    
    
    
    /**Access to parse result.*/
    public int get_hexNumber() { return hexNumber; }
    
    
    
    
    /**Access to parse result.*/
    public int get_hexNumberNegative() { return hexNumberNegative; }
    
    
    
    
    /**Access to parse result.*/
    public String get_booleanConst() { return booleanConst; }
    
    
    
    
    /**Access to parse result.*/
    public int get_intNumber() { return intNumber; }
    
    
    
    
    /**Access to parse result.*/
    public String get_valueFormat() { return valueFormat; }
    
    
    
    
    /**Access to parse result.*/
    public float get_floatNumber() { return floatNumber; }
    
    
    
    
    /**Access to parse result.*/
    public float get_doubleNumber() { return doubleNumber; }
    
    
  
  }




  /**Class for Component constructorDefinition. */
  public static class ConstructorDefinition_Base extends SrcInfo {
  
  
    
    protected JavaSrc.Description description;
    
    
    
    protected JavaSrc.ModifierMethod modifierMethod;
    
    
    
    protected String constructor;
    
    
    
    protected List<JavaSrc.Argument> argument;
    
    
    
    protected List<JavaSrc.ThrowsDeclaration> throwsDeclaration;
    
    
    
    protected JavaSrc.SuperCall superCall;
    
    
    
    protected List<JavaSrc.ClassDefinition> classDefinition;
    
    
    
    protected List<JavaSrc.Statement> statement;
    
    
    
    
    /**Access to parse result.*/
    public JavaSrc.Description get_description() { return description; }
    
    
    
    
    /**Access to parse result.*/
    public JavaSrc.ModifierMethod get_ModifierMethod() { return modifierMethod; }
    
    
    
    
    /**Access to parse result.*/
    public String get_constructor() { return constructor; }
    
    
    
    
    /**Access to parse result, get the elements of the container argument*/
    public Iterable<JavaSrc.Argument> get_argument() { return argument; }
    
    /**Access to parse result, get the size of the container argument.*/
    public int getSize_argument() { return argument ==null ? 0 : argument.size(); }
    
    
    
    
    /**Access to parse result, get the elements of the container throwsDeclaration*/
    public Iterable<JavaSrc.ThrowsDeclaration> get_throwsDeclaration() { return throwsDeclaration; }
    
    /**Access to parse result, get the size of the container throwsDeclaration.*/
    public int getSize_throwsDeclaration() { return throwsDeclaration ==null ? 0 : throwsDeclaration.size(); }
    
    
    
    
    /**Access to parse result.*/
    public JavaSrc.SuperCall get_superCall() { return superCall; }
    
    
    
    
    /**Access to parse result, get the elements of the container classDefinition*/
    public Iterable<JavaSrc.ClassDefinition> get_classDefinition() { return classDefinition; }
    
    /**Access to parse result, get the size of the container classDefinition.*/
    public int getSize_classDefinition() { return classDefinition ==null ? 0 : classDefinition.size(); }
    
    
    
    
    /**Access to parse result, get the elements of the container statement*/
    public Iterable<JavaSrc.Statement> get_statement() { return statement; }
    
    /**Access to parse result, get the size of the container statement.*/
    public int getSize_statement() { return statement ==null ? 0 : statement.size(); }
    
    
  
  }




  /**Class for Component description. */
  public static class Description_Base extends SrcInfo {
  
  
    
    protected JavaSrc.Test_description content;
    
    
    
    
    /**Access to parse result.*/
    public JavaSrc.Test_description get_content() { return content; }
    
    
  
  }




  /**Class for Component dowhile_statement. */
  public static class Dowhile_statement_Base extends SrcInfo {
  
  
    
    protected JavaSrc.Statement statement;
    
    
    
    protected JavaSrc.Expression expression;
    
    
    
    
    /**Access to parse result.*/
    public JavaSrc.Statement get_statement() { return statement; }
    
    
    
    
    /**Access to parse result.*/
    public JavaSrc.Expression get_Expression() { return expression; }
    
    
  
  }




  /**Class for Component enumDefinition. */
  public static class EnumDefinition_Base extends SrcInfo {
  
  
    
    protected String enumTypeIdent;
    
    
    
    protected List<JavaSrc.EnumElement> enumElement;
    
    
    
    protected JavaSrc.ClassContent classContent;
    
    
    
    
    /**Access to parse result.*/
    public String get_enumTypeIdent() { return enumTypeIdent; }
    
    
    
    
    /**Access to parse result, get the elements of the container enumElement*/
    public Iterable<JavaSrc.EnumElement> get_enumElement() { return enumElement; }
    
    /**Access to parse result, get the size of the container enumElement.*/
    public int getSize_enumElement() { return enumElement ==null ? 0 : enumElement.size(); }
    
    
    
    
    /**Access to parse result.*/
    public JavaSrc.ClassContent get_classContent() { return classContent; }
    
    
  
  }




  /**Class for Component envIdent. */
  public static class EnvIdent_Base extends SrcInfo {
  
  
    
    protected String name;
    
    
    
    protected List<String> undefGenericType;
    
    
    
    protected List<JavaSrc.Type> genericType;
    
    
    
    protected List<JavaSrc.Type> baseGenericKey;
    
    
    
    protected JavaSrc.EnvIdent subIdent;
    
    
    
    
    /**Access to parse result.*/
    public String get_name() { return name; }
    
    
    
    
    /**Access to parse result, get the elements of the container undefGenericType*/
    public Iterable<String> get_undefGenericType() { return undefGenericType; }
    
    /**Access to parse result, get the size of the container undefGenericType.*/
    public int getSize_undefGenericType() { return undefGenericType ==null ? 0 : undefGenericType.size(); }
    
    
    
    
    /**Access to parse result, get the elements of the container GenericType*/
    public Iterable<JavaSrc.Type> get_GenericType() { return genericType; }
    
    /**Access to parse result, get the size of the container GenericType.*/
    public int getSize_GenericType() { return genericType ==null ? 0 : genericType.size(); }
    
    
    
    
    /**Access to parse result, get the elements of the container baseGenericKey*/
    public Iterable<JavaSrc.Type> get_baseGenericKey() { return baseGenericKey; }
    
    /**Access to parse result, get the size of the container baseGenericKey.*/
    public int getSize_baseGenericKey() { return baseGenericKey ==null ? 0 : baseGenericKey.size(); }
    
    
    
    
    /**Access to parse result.*/
    public JavaSrc.EnvIdent get_subIdent() { return subIdent; }
    
    
  
  }




  /**Class for Component forElement_statement. */
  public static class ForElement_statement_Base extends SrcInfo {
  
  
    
    protected List<JavaSrc.VariableInstance> variableDefinition;
    
    
    
    protected JavaSrc.Expression expression;
    
    
    
    protected JavaSrc.Statement statement;
    
    
    
    
    /**Access to parse result, get the elements of the container variableDefinition*/
    public Iterable<JavaSrc.VariableInstance> get_variableDefinition() { return variableDefinition; }
    
    /**Access to parse result, get the size of the container variableDefinition.*/
    public int getSize_variableDefinition() { return variableDefinition ==null ? 0 : variableDefinition.size(); }
    
    
    
    
    /**Access to parse result.*/
    public JavaSrc.Expression get_Expression() { return expression; }
    
    
    
    
    /**Access to parse result.*/
    public JavaSrc.Statement get_statement() { return statement; }
    
    
  
  }




  /**Class for Component for_statement. */
  public static class For_statement_Base extends SrcInfo {
  
  
    
    protected List<JavaSrc.VariableInstance> variableDefinition;
    
    
    
    protected JavaSrc.Expression startAssignment;
    
    
    
    protected JavaSrc.Expression endCondition;
    
    
    
    protected JavaSrc.Expression iteratorAssignment;
    
    
    
    protected JavaSrc.SimpleValue iteratorExpression;
    
    
    
    protected JavaSrc.Statement statement;
    
    
    
    
    /**Access to parse result, get the elements of the container variableDefinition*/
    public Iterable<JavaSrc.VariableInstance> get_variableDefinition() { return variableDefinition; }
    
    /**Access to parse result, get the size of the container variableDefinition.*/
    public int getSize_variableDefinition() { return variableDefinition ==null ? 0 : variableDefinition.size(); }
    
    
    
    
    /**Access to parse result.*/
    public JavaSrc.Expression get_startAssignment() { return startAssignment; }
    
    
    
    
    /**Access to parse result.*/
    public JavaSrc.Expression get_endCondition() { return endCondition; }
    
    
    
    
    /**Access to parse result.*/
    public JavaSrc.Expression get_iteratorAssignment() { return iteratorAssignment; }
    
    
    
    
    /**Access to parse result.*/
    public JavaSrc.SimpleValue get_iteratorExpression() { return iteratorExpression; }
    
    
    
    
    /**Access to parse result.*/
    public JavaSrc.Statement get_statement() { return statement; }
    
    
  
  }




  /**Class for Component generic. */
  public static class Generic_Base extends SrcInfo {
  
  
    
    protected List<String> undefGenericType;
    
    
    
    protected List<JavaSrc.Type> genericType;
    
    
    
    protected List<JavaSrc.Type> baseGenericKey;
    
    
    
    
    /**Access to parse result, get the elements of the container undefGenericType*/
    public Iterable<String> get_undefGenericType() { return undefGenericType; }
    
    /**Access to parse result, get the size of the container undefGenericType.*/
    public int getSize_undefGenericType() { return undefGenericType ==null ? 0 : undefGenericType.size(); }
    
    
    
    
    /**Access to parse result, get the elements of the container GenericType*/
    public Iterable<JavaSrc.Type> get_GenericType() { return genericType; }
    
    /**Access to parse result, get the size of the container GenericType.*/
    public int getSize_GenericType() { return genericType ==null ? 0 : genericType.size(); }
    
    
    
    
    /**Access to parse result, get the elements of the container baseGenericKey*/
    public Iterable<JavaSrc.Type> get_baseGenericKey() { return baseGenericKey; }
    
    /**Access to parse result, get the size of the container baseGenericKey.*/
    public int getSize_baseGenericKey() { return baseGenericKey ==null ? 0 : baseGenericKey.size(); }
    
    
  
  }




  /**Class for Component if_statement. */
  public static class If_statement_Base extends SrcInfo {
  
  
    
    protected JavaSrc.Expression expression;
    
    
    
    protected String noAction;
    
    
    
    protected JavaSrc.Statement statement;
    
    
    
    protected JavaSrc.Statement elseStatement;
    
    
    
    
    /**Access to parse result.*/
    public JavaSrc.Expression get_Expression() { return expression; }
    
    
    
    
    /**Access to parse result.*/
    public String get_noAction() { return noAction; }
    
    
    
    
    /**Access to parse result.*/
    public JavaSrc.Statement get_statement() { return statement; }
    
    
    
    
    /**Access to parse result.*/
    public JavaSrc.Statement get_elseStatement() { return elseStatement; }
    
    
  
  }




  /**Class for Component importpath. */
  public static class Importpath_Base extends SrcInfo {
  
  
    
    protected List<String> packagePath;
    
    
    
    protected String class___;
    
    
    
    protected String allClasses;
    
    
    
    
    /**Access to parse result, get the elements of the container packagePath*/
    public Iterable<String> get_packagePath() { return packagePath; }
    
    /**Access to parse result, get the size of the container packagePath.*/
    public int getSize_packagePath() { return packagePath ==null ? 0 : packagePath.size(); }
    
    
    
    
    /**Access to parse result.*/
    public String get_class() { return class___; }
    
    
    
    
    /**Access to parse result.*/
    public String get_allClasses() { return allClasses; }
    
    
  
  }




  /**Class for Component java2cTag. */
  public static class Java2cTag_Base extends SrcInfo {
  
  
    
    protected String xxxfixStringBuffer;
    
    
    
    protected String simpleArray;
    
    
    
    protected String simpleVariableRef;
    
    
    
    protected String staticInstance;
    
    
    
    protected String embeddedYElements;
    
    
    
    protected String noObject;
    
    
    
    protected String noGC;
    
    
    
    protected String nonPersistent;
    
    
    
    protected String stackInstance;
    
    
    
    protected String zeroTermString;
    
    
    
    protected String byteStringJc;
    
    
    
    protected String return_this;
    
    
    
    protected String return_new;
    
    
    
    protected String dynamic_call;
    
    
    
    protected String xxxoverride_able;
    
    
    
    protected String noThCxt;
    
    
    
    protected String noStacktrace;
    
    
    
    protected String instanceTypeTag;
    
    
    
    protected String embeddedTypeTag;
    
    
    
    protected String stackSize;
    
    
    
    protected List<Integer> bytes;
    
    
    
    protected List<String> typeStack;
    
    
    
    protected String toStringNonPersist;
    
    
    
    protected String declarePersist;
    
    
    
    protected int stringBuilderInStack;
    
    
    
    protected String stringBuilderInThreadCxt;
    
    
    
    protected String return_InThreadCxt;
    
    
    
    
    /**Access to parse result.*/
    public String get_xxxfixStringBuffer() { return xxxfixStringBuffer; }
    
    
    
    
    /**Access to parse result.*/
    public String get_simpleArray() { return simpleArray; }
    
    
    
    
    /**Access to parse result.*/
    public String get_simpleVariableRef() { return simpleVariableRef; }
    
    
    
    
    /**Access to parse result.*/
    public String get_staticInstance() { return staticInstance; }
    
    
    
    
    /**Access to parse result.*/
    public String get_embeddedYElements() { return embeddedYElements; }
    
    
    
    
    /**Access to parse result.*/
    public String get_noObject() { return noObject; }
    
    
    
    
    /**Access to parse result.*/
    public String get_noGC() { return noGC; }
    
    
    
    
    /**Access to parse result.*/
    public String get_nonPersistent() { return nonPersistent; }
    
    
    
    
    /**Access to parse result.*/
    public String get_stackInstance() { return stackInstance; }
    
    
    
    
    /**Access to parse result.*/
    public String get_zeroTermString() { return zeroTermString; }
    
    
    
    
    /**Access to parse result.*/
    public String get_ByteStringJc() { return byteStringJc; }
    
    
    
    
    /**Access to parse result.*/
    public String get_return_this() { return return_this; }
    
    
    
    
    /**Access to parse result.*/
    public String get_return_new() { return return_new; }
    
    
    
    
    /**Access to parse result.*/
    public String get_dynamic_call() { return dynamic_call; }
    
    
    
    
    /**Access to parse result.*/
    public String get_xxxoverride_able() { return xxxoverride_able; }
    
    
    
    
    /**Access to parse result.*/
    public String get_noThCxt() { return noThCxt; }
    
    
    
    
    /**Access to parse result.*/
    public String get_noStacktrace() { return noStacktrace; }
    
    
    
    
    /**Access to parse result.*/
    public String get_instanceTypeTag() { return instanceTypeTag; }
    
    
    
    
    /**Access to parse result.*/
    public String get_embeddedTypeTag() { return embeddedTypeTag; }
    
    
    
    
    /**Access to parse result.*/
    public String get_stackSize() { return stackSize; }
    
    
    
    
    /**Access to parse result, get the elements of the container bytes*/
    public Iterable<Integer> get_bytes() { return bytes; }
    
    /**Access to parse result, get the size of the container bytes.*/
    public int getSize_bytes() { return bytes ==null ? 0 : bytes.size(); }
    
    
    
    
    /**Access to parse result, get the elements of the container typeStack*/
    public Iterable<String> get_typeStack() { return typeStack; }
    
    /**Access to parse result, get the size of the container typeStack.*/
    public int getSize_typeStack() { return typeStack ==null ? 0 : typeStack.size(); }
    
    
    
    
    /**Access to parse result.*/
    public String get_toStringNonPersist() { return toStringNonPersist; }
    
    
    
    
    /**Access to parse result.*/
    public String get_declarePersist() { return declarePersist; }
    
    
    
    
    /**Access to parse result.*/
    public int get_StringBuilderInStack() { return stringBuilderInStack; }
    
    
    
    
    /**Access to parse result.*/
    public String get_StringBuilderInThreadCxt() { return stringBuilderInThreadCxt; }
    
    
    
    
    /**Access to parse result.*/
    public String get_return_InThreadCxt() { return return_InThreadCxt; }
    
    
  
  }




  /**Class for Component java2cTagParam. */
  public static class Java2cTagParam_Base extends SrcInfo {
  
  
    
    protected String simpleArray;
    
    
    
    protected String simpleVariableRef;
    
    
    
    protected String nonPersistent;
    
    
    
    protected String zeroTermString;
    
    
    
    
    /**Access to parse result.*/
    public String get_simpleArray() { return simpleArray; }
    
    
    
    
    /**Access to parse result.*/
    public String get_simpleVariableRef() { return simpleVariableRef; }
    
    
    
    
    /**Access to parse result.*/
    public String get_nonPersistent() { return nonPersistent; }
    
    
    
    
    /**Access to parse result.*/
    public String get_zeroTermString() { return zeroTermString; }
    
    
  
  }




  /**Class for Component maybeReferencedVariable. */
  public static class MaybeReferencedVariable_Base extends SrcInfo {
  
  
    
    protected JavaSrc.Reference reference;
    
    
    
    protected String variableName;
    
    
    
    protected List<JavaSrc.Expression> arrayIndex;
    
    
    
    
    /**Access to parse result.*/
    public JavaSrc.Reference get_reference() { return reference; }
    
    
    
    
    /**Access to parse result.*/
    public String get_variableName() { return variableName; }
    
    
    
    
    /**Access to parse result, get the elements of the container arrayIndex*/
    public Iterable<JavaSrc.Expression> get_arrayIndex() { return arrayIndex; }
    
    /**Access to parse result, get the size of the container arrayIndex.*/
    public int getSize_arrayIndex() { return arrayIndex ==null ? 0 : arrayIndex.size(); }
    
    
  
  }




  /**Class for Component methodDefinition. */
  public static class MethodDefinition_Base extends SrcInfo {
  
  
    
    protected JavaSrc.Description description;
    
    
    
    protected String a_Override;
    
    
    
    protected JavaSrc.ModifierMethod modifierMethod;
    
    
    
    protected String defineGenericLocal_WhatIsThat;
    
    
    
    protected JavaSrc.Type type;
    
    
    
    protected String name;
    
    
    
    protected List<JavaSrc.Argument> argument;
    
    
    
    protected List<JavaSrc.ThrowsDeclaration> throwsDeclaration;
    
    
    
    protected String abstractMethod;
    
    
    
    protected JavaSrc.StatementBlock methodbody;
    
    
    
    
    /**Access to parse result.*/
    public JavaSrc.Description get_description() { return description; }
    
    
    
    
    /**Access to parse result.*/
    public String get_A_Override() { return a_Override; }
    
    
    
    
    /**Access to parse result.*/
    public JavaSrc.ModifierMethod get_ModifierMethod() { return modifierMethod; }
    
    
    
    
    /**Access to parse result.*/
    public String get_defineGenericLocal_WhatIsThat() { return defineGenericLocal_WhatIsThat; }
    
    
    
    
    /**Access to parse result.*/
    public JavaSrc.Type get_type() { return type; }
    
    
    
    
    /**Access to parse result.*/
    public String get_name() { return name; }
    
    
    
    
    /**Access to parse result, get the elements of the container argument*/
    public Iterable<JavaSrc.Argument> get_argument() { return argument; }
    
    /**Access to parse result, get the size of the container argument.*/
    public int getSize_argument() { return argument ==null ? 0 : argument.size(); }
    
    
    
    
    /**Access to parse result, get the elements of the container throwsDeclaration*/
    public Iterable<JavaSrc.ThrowsDeclaration> get_throwsDeclaration() { return throwsDeclaration; }
    
    /**Access to parse result, get the size of the container throwsDeclaration.*/
    public int getSize_throwsDeclaration() { return throwsDeclaration ==null ? 0 : throwsDeclaration.size(); }
    
    
    
    
    /**Access to parse result.*/
    public String get_abstractMethod() { return abstractMethod; }
    
    
    
    
    /**Access to parse result.*/
    public JavaSrc.StatementBlock get_methodbody() { return methodbody; }
    
    
  
  }




  /**Class for Component newArray. */
  public static class NewArray_Base extends SrcInfo {
  
  
    
    protected JavaSrc.NonArrayType newClass;
    
    
    
    protected List<JavaSrc.Expression> expression;
    
    
    
    protected JavaSrc.ConstArray constArray;
    
    
    
    
    /**Access to parse result.*/
    public JavaSrc.NonArrayType get_newClass() { return newClass; }
    
    
    
    
    /**Access to parse result, get the elements of the container Expression*/
    public Iterable<JavaSrc.Expression> get_Expression() { return expression; }
    
    /**Access to parse result, get the size of the container Expression.*/
    public int getSize_Expression() { return expression ==null ? 0 : expression.size(); }
    
    
    
    
    /**Access to parse result.*/
    public JavaSrc.ConstArray get_constArray() { return constArray; }
    
    
  
  }




  /**Class for Component newObject. */
  public static class NewObject_Base extends SrcInfo {
  
  
    
    protected JavaSrc.Reference reference;
    
    
    
    protected JavaSrc.NonArrayType newClass;
    
    
    
    protected JavaSrc.ActualArguments actualArguments;
    
    
    
    protected JavaSrc.ClassContent impliciteImplementationClass;
    
    
    
    
    /**Access to parse result.*/
    public JavaSrc.Reference get_reference() { return reference; }
    
    
    
    
    /**Access to parse result.*/
    public JavaSrc.NonArrayType get_newClass() { return newClass; }
    
    
    
    
    /**Access to parse result.*/
    public JavaSrc.ActualArguments get_actualArguments() { return actualArguments; }
    
    
    
    
    /**Access to parse result.*/
    public JavaSrc.ClassContent get_impliciteImplementationClass() { return impliciteImplementationClass; }
    
    
  
  }




  /**Class for Component nonArrayType. */
  public static class NonArrayType_Base extends SrcInfo {
  
  
    
    protected JavaSrc.EnvIdent envIdent;
    
    
    
    protected String name;
    
    
    
    protected List<String> undefGenericType;
    
    
    
    protected List<JavaSrc.Type> genericType;
    
    
    
    protected List<JavaSrc.Type> baseGenericKey;
    
    
    
    protected String va_arg;
    
    
    
    
    /**Access to parse result.*/
    public JavaSrc.EnvIdent get_envIdent() { return envIdent; }
    
    
    
    
    /**Access to parse result.*/
    public String get_name() { return name; }
    
    
    
    
    /**Access to parse result, get the elements of the container undefGenericType*/
    public Iterable<String> get_undefGenericType() { return undefGenericType; }
    
    /**Access to parse result, get the size of the container undefGenericType.*/
    public int getSize_undefGenericType() { return undefGenericType ==null ? 0 : undefGenericType.size(); }
    
    
    
    
    /**Access to parse result, get the elements of the container GenericType*/
    public Iterable<JavaSrc.Type> get_GenericType() { return genericType; }
    
    /**Access to parse result, get the size of the container GenericType.*/
    public int getSize_GenericType() { return genericType ==null ? 0 : genericType.size(); }
    
    
    
    
    /**Access to parse result, get the elements of the container baseGenericKey*/
    public Iterable<JavaSrc.Type> get_baseGenericKey() { return baseGenericKey; }
    
    /**Access to parse result, get the size of the container baseGenericKey.*/
    public int getSize_baseGenericKey() { return baseGenericKey ==null ? 0 : baseGenericKey.size(); }
    
    
    
    
    /**Access to parse result.*/
    public String get_va_arg() { return va_arg; }
    
    
  
  }




  /**Class for Component operator. */
  public static class Operator_Base extends SrcInfo {
  
  
    
    protected String operator;
    
    
    
    
    /**Access to parse result.*/
    public String get_operator() { return operator; }
    
    
  
  }




  /**Class for Component paramDescription. */
  public static class ParamDescription_Base extends SrcInfo {
  
  
    
    protected String text;
    
    
    
    protected List<String> simpleArray;
    
    
    
    protected List<String> simpleVariableRef;
    
    
    
    protected List<String> nonPersistent;
    
    
    
    protected List<String> zeroTermString;
    
    
    
    protected List<String> rest;
    
    
    
    protected List<String> auxDescription;
    
    
    
    
    /**Access to parse result.*/
    public String get_text() { return text; }
    
    
    
    
    /**Access to parse result, get the elements of the container simpleArray*/
    public Iterable<String> get_simpleArray() { return simpleArray; }
    
    /**Access to parse result, get the size of the container simpleArray.*/
    public int getSize_simpleArray() { return simpleArray ==null ? 0 : simpleArray.size(); }
    
    
    
    
    /**Access to parse result, get the elements of the container simpleVariableRef*/
    public Iterable<String> get_simpleVariableRef() { return simpleVariableRef; }
    
    /**Access to parse result, get the size of the container simpleVariableRef.*/
    public int getSize_simpleVariableRef() { return simpleVariableRef ==null ? 0 : simpleVariableRef.size(); }
    
    
    
    
    /**Access to parse result, get the elements of the container nonPersistent*/
    public Iterable<String> get_nonPersistent() { return nonPersistent; }
    
    /**Access to parse result, get the size of the container nonPersistent.*/
    public int getSize_nonPersistent() { return nonPersistent ==null ? 0 : nonPersistent.size(); }
    
    
    
    
    /**Access to parse result, get the elements of the container zeroTermString*/
    public Iterable<String> get_zeroTermString() { return zeroTermString; }
    
    /**Access to parse result, get the size of the container zeroTermString.*/
    public int getSize_zeroTermString() { return zeroTermString ==null ? 0 : zeroTermString.size(); }
    
    
    
    
    /**Access to parse result, get the elements of the container rest*/
    public Iterable<String> get_rest() { return rest; }
    
    /**Access to parse result, get the size of the container rest.*/
    public int getSize_rest() { return rest ==null ? 0 : rest.size(); }
    
    
    
    
    /**Access to parse result, get the elements of the container auxDescription*/
    public Iterable<String> get_auxDescription() { return auxDescription; }
    
    /**Access to parse result, get the size of the container auxDescription.*/
    public int getSize_auxDescription() { return auxDescription ==null ? 0 : auxDescription.size(); }
    
    
  
  }




  /**Class for Component paramInDescription. */
  public static class ParamInDescription_Base extends SrcInfo {
  
  
    
    protected String variableName;
    
    
    
    
    /**Access to parse result.*/
    public String get_variableName() { return variableName; }
    
    
  
  }




  /**Class for Component reference. */
  public static class Reference_Base extends SrcInfo {
  
  
    
    protected String isThis;
    
    
    
    protected String isSuper;
    
    
    
    protected JavaSrc.NewObject newObject;
    
    
    
    protected JavaSrc.Expression expression;
    
    
    
    protected JavaSrc.SimpleMethodCall referenceMethod;
    
    
    
    protected JavaSrc.SimpleVariable referenceAssociation;
    
    
    
    protected JavaSrc.Reference reference;
    
    
    
    
    /**Access to parse result.*/
    public String get_isThis() { return isThis; }
    
    
    
    
    /**Access to parse result.*/
    public String get_isSuper() { return isSuper; }
    
    
    
    
    /**Access to parse result.*/
    public JavaSrc.NewObject get_newObject() { return newObject; }
    
    
    
    
    /**Access to parse result.*/
    public JavaSrc.Expression get_Expression() { return expression; }
    
    
    
    
    /**Access to parse result.*/
    public JavaSrc.SimpleMethodCall get_referenceMethod() { return referenceMethod; }
    
    
    
    
    /**Access to parse result.*/
    public JavaSrc.SimpleVariable get_referenceAssociation() { return referenceAssociation; }
    
    
    
    
    /**Access to parse result.*/
    public JavaSrc.Reference get_reference() { return reference; }
    
    
  
  }




  /**Class for Component rententionpolicy. */
  public static class Rententionpolicy_Base extends SrcInfo {
  
  
    
    protected String rententionPolicy;
    
    
    
    
    /**Access to parse result.*/
    public String get_RententionPolicy() { return rententionPolicy; }
    
    
  
  }




  /**Class for Component returnDescription. */
  public static class ReturnDescription_Base extends SrcInfo {
  
  
  
  }




  /**Class for Component simpleMethodCall. */
  public static class SimpleMethodCall_Base extends SrcInfo {
  
  
    
    protected String methodName;
    
    
    
    protected JavaSrc.ActualArguments actualArguments;
    
    
    
    
    /**Access to parse result.*/
    public String get_methodName() { return methodName; }
    
    
    
    
    /**Access to parse result.*/
    public JavaSrc.ActualArguments get_actualArguments() { return actualArguments; }
    
    
  
  }




  /**Class for Component simpleValue. */
  public static class SimpleValue_Base extends SrcInfo {
  
  
    
    protected String j2Ctest;
    
    
    
    protected String unaryOperator;
    
    
    
    protected String simpleStringLiteral;
    
    
    
    protected JavaSrc.SimpleMethodCall stringLiteralMethod;
    
    
    
    protected String simpleCharLiteral;
    
    
    
    protected JavaSrc.Type typeCast;
    
    
    
    protected JavaSrc.Expression expression;
    
    
    
    protected JavaSrc.ConstNumber constNumber;
    
    
    
    protected JavaSrc.NewArray newArray;
    
    
    
    protected JavaSrc.NewObject newObject;
    
    
    
    protected JavaSrc.SimpleMethodCall simpleMethodCall;
    
    
    
    protected JavaSrc.SimpleVariable simpleVariable;
    
    
    
    protected JavaSrc.Reference reference;
    
    
    
    protected String typeReflect;
    
    
    
    protected String preDecrement;
    
    
    
    protected String preIncrement;
    
    
    
    protected String postDecrement;
    
    
    
    protected String postIncrement;
    
    
    
    protected String classObject;
    
    
    
    protected String parenthesisExpression;
    
    
    
    protected String nullRef;
    
    
    
    protected JavaSrc.ArrayElementAccess arrayElementAccess;
    
    
    
    
    /**Access to parse result.*/
    public String get_J2Ctest() { return j2Ctest; }
    
    
    
    
    /**Access to parse result.*/
    public String get_unaryOperator() { return unaryOperator; }
    
    
    
    
    /**Access to parse result.*/
    public String get_simpleStringLiteral() { return simpleStringLiteral; }
    
    
    
    
    /**Access to parse result.*/
    public JavaSrc.SimpleMethodCall get_StringLiteralMethod() { return stringLiteralMethod; }
    
    
    
    
    /**Access to parse result.*/
    public String get_simpleCharLiteral() { return simpleCharLiteral; }
    
    
    
    
    /**Access to parse result.*/
    public JavaSrc.Type get_typeCast() { return typeCast; }
    
    
    
    
    /**Access to parse result.*/
    public JavaSrc.Expression get_Expression() { return expression; }
    
    
    
    
    /**Access to parse result.*/
    public JavaSrc.ConstNumber get_constNumber() { return constNumber; }
    
    
    
    
    /**Access to parse result.*/
    public JavaSrc.NewArray get_newArray() { return newArray; }
    
    
    
    
    /**Access to parse result.*/
    public JavaSrc.NewObject get_newObject() { return newObject; }
    
    
    
    
    /**Access to parse result.*/
    public JavaSrc.SimpleMethodCall get_simpleMethodCall() { return simpleMethodCall; }
    
    
    
    
    /**Access to parse result.*/
    public JavaSrc.SimpleVariable get_simpleVariable() { return simpleVariable; }
    
    
    
    
    /**Access to parse result.*/
    public JavaSrc.Reference get_reference() { return reference; }
    
    
    
    
    /**Access to parse result.*/
    public String get_TypeReflect() { return typeReflect; }
    
    
    
    
    /**Access to parse result.*/
    public String get_preDecrement() { return preDecrement; }
    
    
    
    
    /**Access to parse result.*/
    public String get_preIncrement() { return preIncrement; }
    
    
    
    
    /**Access to parse result.*/
    public String get_postDecrement() { return postDecrement; }
    
    
    
    
    /**Access to parse result.*/
    public String get_postIncrement() { return postIncrement; }
    
    
    
    
    /**Access to parse result.*/
    public String get_classObject() { return classObject; }
    
    
    
    
    /**Access to parse result.*/
    public String get_parenthesisExpression() { return parenthesisExpression; }
    
    
    
    
    /**Access to parse result.*/
    public String get_nullRef() { return nullRef; }
    
    
    
    
    /**Access to parse result.*/
    public JavaSrc.ArrayElementAccess get_arrayElementAccess() { return arrayElementAccess; }
    
    
  
  }




  /**Class for Component simpleVariable. */
  public static class SimpleVariable_Base extends SrcInfo {
  
  
    
    protected String variableName;
    
    
    
    protected List<JavaSrc.Expression> arrayIndex;
    
    
    
    
    /**Access to parse result.*/
    public String get_variableName() { return variableName; }
    
    
    
    
    /**Access to parse result, get the elements of the container arrayIndex*/
    public Iterable<JavaSrc.Expression> get_arrayIndex() { return arrayIndex; }
    
    /**Access to parse result, get the size of the container arrayIndex.*/
    public int getSize_arrayIndex() { return arrayIndex ==null ? 0 : arrayIndex.size(); }
    
    
  
  }




  /**Class for Component statement. */
  public static class Statement_Base extends SrcInfo {
  
  
    
    protected String j2Ctest;
    
    
    
    protected JavaSrc.Description description;
    
    
    
    protected String emtypStatementBlock;
    
    
    
    protected String emptyStatement;
    
    
    
    protected String synchronizedBock;
    
    
    
    protected JavaSrc.SimpleValue synchronizedObject;
    
    
    
    protected JavaSrc.StatementBlock statementBlock;
    
    
    
    protected JavaSrc.If_statement if_statement;
    
    
    
    protected JavaSrc.Switch_statement switch_statement;
    
    
    
    protected JavaSrc.While_statement while_statement;
    
    
    
    protected JavaSrc.Dowhile_statement dowhile_statement;
    
    
    
    protected JavaSrc.ForElement_statement forElement_statement;
    
    
    
    protected JavaSrc.For_statement for_statement;
    
    
    
    protected String throwNew;
    
    
    
    protected JavaSrc.Type exceptionClass;
    
    
    
    protected JavaSrc.Expression expression;
    
    
    
    protected JavaSrc.Expression value2;
    
    
    
    protected String throwExc;
    
    
    
    protected JavaSrc.Try_statement try_statement;
    
    
    
    protected String returnStmnt;
    
    
    
    protected String break_statement;
    
    
    
    protected List<JavaSrc.VariableInstance> variableDefinition;
    
    
    
    protected String descriptionInline;
    
    
    
    
    /**Access to parse result.*/
    public String get_J2Ctest() { return j2Ctest; }
    
    
    
    
    /**Access to parse result.*/
    public JavaSrc.Description get_description() { return description; }
    
    
    
    
    /**Access to parse result.*/
    public String get_emtypStatementBlock() { return emtypStatementBlock; }
    
    
    
    
    /**Access to parse result.*/
    public String get_emptyStatement() { return emptyStatement; }
    
    
    
    
    /**Access to parse result.*/
    public String get_synchronizedBock() { return synchronizedBock; }
    
    
    
    
    /**Access to parse result.*/
    public JavaSrc.SimpleValue get_synchronizedObject() { return synchronizedObject; }
    
    
    
    
    /**Access to parse result.*/
    public JavaSrc.StatementBlock get_statementBlock() { return statementBlock; }
    
    
    
    
    /**Access to parse result.*/
    public JavaSrc.If_statement get_if_statement() { return if_statement; }
    
    
    
    
    /**Access to parse result.*/
    public JavaSrc.Switch_statement get_switch_statement() { return switch_statement; }
    
    
    
    
    /**Access to parse result.*/
    public JavaSrc.While_statement get_while_statement() { return while_statement; }
    
    
    
    
    /**Access to parse result.*/
    public JavaSrc.Dowhile_statement get_dowhile_statement() { return dowhile_statement; }
    
    
    
    
    /**Access to parse result.*/
    public JavaSrc.ForElement_statement get_forElement_statement() { return forElement_statement; }
    
    
    
    
    /**Access to parse result.*/
    public JavaSrc.For_statement get_for_statement() { return for_statement; }
    
    
    
    
    /**Access to parse result.*/
    public String get_throwNew() { return throwNew; }
    
    
    
    
    /**Access to parse result.*/
    public JavaSrc.Type get_exceptionClass() { return exceptionClass; }
    
    
    
    
    /**Access to parse result.*/
    public JavaSrc.Expression get_Expression() { return expression; }
    
    
    
    
    /**Access to parse result.*/
    public JavaSrc.Expression get_value2() { return value2; }
    
    
    
    
    /**Access to parse result.*/
    public String get_throwExc() { return throwExc; }
    
    
    
    
    /**Access to parse result.*/
    public JavaSrc.Try_statement get_try_statement() { return try_statement; }
    
    
    
    
    /**Access to parse result.*/
    public String get_returnStmnt() { return returnStmnt; }
    
    
    
    
    /**Access to parse result.*/
    public String get_break_statement() { return break_statement; }
    
    
    
    
    /**Access to parse result, get the elements of the container variableDefinition*/
    public Iterable<JavaSrc.VariableInstance> get_variableDefinition() { return variableDefinition; }
    
    /**Access to parse result, get the size of the container variableDefinition.*/
    public int getSize_variableDefinition() { return variableDefinition ==null ? 0 : variableDefinition.size(); }
    
    
    
    
    /**Access to parse result.*/
    public String get_descriptionInline() { return descriptionInline; }
    
    
  
  }




  /**Class for Component statementBlock. */
  public static class StatementBlock_Base extends SrcInfo {
  
  
    
    protected List<String> descriptionOfBlock;
    
    
    
    protected List<JavaSrc.ClassDefinition> classDefinition;
    
    
    
    protected List<JavaSrc.Statement> statement;
    
    
    
    
    /**Access to parse result, get the elements of the container descriptionOfBlock*/
    public Iterable<String> get_descriptionOfBlock() { return descriptionOfBlock; }
    
    /**Access to parse result, get the size of the container descriptionOfBlock.*/
    public int getSize_descriptionOfBlock() { return descriptionOfBlock ==null ? 0 : descriptionOfBlock.size(); }
    
    
    
    
    /**Access to parse result, get the elements of the container classDefinition*/
    public Iterable<JavaSrc.ClassDefinition> get_classDefinition() { return classDefinition; }
    
    /**Access to parse result, get the size of the container classDefinition.*/
    public int getSize_classDefinition() { return classDefinition ==null ? 0 : classDefinition.size(); }
    
    
    
    
    /**Access to parse result, get the elements of the container statement*/
    public Iterable<JavaSrc.Statement> get_statement() { return statement; }
    
    /**Access to parse result, get the size of the container statement.*/
    public int getSize_statement() { return statement ==null ? 0 : statement.size(); }
    
    
  
  }




  /**Class for Component statementsOrDefinition. */
  public static class StatementsOrDefinition_Base extends SrcInfo {
  
  
    
    protected List<JavaSrc.ClassDefinition> classDefinition;
    
    
    
    protected List<JavaSrc.Statement> statement;
    
    
    
    
    /**Access to parse result, get the elements of the container classDefinition*/
    public Iterable<JavaSrc.ClassDefinition> get_classDefinition() { return classDefinition; }
    
    /**Access to parse result, get the size of the container classDefinition.*/
    public int getSize_classDefinition() { return classDefinition ==null ? 0 : classDefinition.size(); }
    
    
    
    
    /**Access to parse result, get the elements of the container statement*/
    public Iterable<JavaSrc.Statement> get_statement() { return statement; }
    
    /**Access to parse result, get the size of the container statement.*/
    public int getSize_statement() { return statement ==null ? 0 : statement.size(); }
    
    
  
  }




  /**Class for Component superCall. */
  public static class SuperCall_Base extends SrcInfo {
  
  
    
    protected JavaSrc.Reference reference;
    
    
    
    protected JavaSrc.ActualArguments actualArguments;
    
    
    
    
    /**Access to parse result.*/
    public JavaSrc.Reference get_reference() { return reference; }
    
    
    
    
    /**Access to parse result.*/
    public JavaSrc.ActualArguments get_actualArguments() { return actualArguments; }
    
    
  
  }




  /**Class for Component switch_statement. */
  public static class Switch_statement_Base extends SrcInfo {
  
  
    
    protected JavaSrc.Expression expression;
    
    
    
    protected List<JavaSrc.CaseExpr> caseExpr;
    
    
    
    protected JavaSrc.StatementsOrDefinition defaultExpr;
    
    
    
    
    /**Access to parse result.*/
    public JavaSrc.Expression get_Expression() { return expression; }
    
    
    
    
    /**Access to parse result, get the elements of the container caseExpr*/
    public Iterable<JavaSrc.CaseExpr> get_caseExpr() { return caseExpr; }
    
    /**Access to parse result, get the size of the container caseExpr.*/
    public int getSize_caseExpr() { return caseExpr ==null ? 0 : caseExpr.size(); }
    
    
    
    
    /**Access to parse result.*/
    public JavaSrc.StatementsOrDefinition get_defaultExpr() { return defaultExpr; }
    
    
  
  }




  /**Class for Component test_description. */
  public static class Test_description_Base extends SrcInfo {
  
  
    
    protected String text;
    
    
    
    protected String sizeofDescription;
    
    
    
    protected JavaSrc.ReturnDescription returnDescription;
    
    
    
    protected List<JavaSrc.ParamInDescription> paramInDescription;
    
    
    
    protected String staticInstance;
    
    
    
    protected List<String> xxxfixStringBuffer;
    
    
    
    protected List<String> simpleArray;
    
    
    
    protected List<String> simpleVariableRef;
    
    
    
    protected List<String> embeddedYElements;
    
    
    
    protected List<String> noObject;
    
    
    
    protected List<String> noGC;
    
    
    
    protected List<String> nonPersistent;
    
    
    
    protected List<String> stackInstance;
    
    
    
    protected List<String> zeroTermString;
    
    
    
    protected List<String> byteStringJc;
    
    
    
    protected List<String> return_this;
    
    
    
    protected List<String> return_new;
    
    
    
    protected List<String> dynamic_call;
    
    
    
    protected List<String> xxxoverride_able;
    
    
    
    protected List<String> noThCxt;
    
    
    
    protected List<String> noStacktrace;
    
    
    
    protected List<String> instanceTypeTag;
    
    
    
    protected List<String> embeddedTypeTag;
    
    
    
    protected List<String> stackSize;
    
    
    
    protected List<Integer> bytes;
    
    
    
    protected List<String> typeStack;
    
    
    
    protected List<String> toStringNonPersist;
    
    
    
    protected List<String> declarePersist;
    
    
    
    protected List<Integer> stringBuilderInStack;
    
    
    
    protected List<String> stringBuilderInThreadCxt;
    
    
    
    protected List<String> return_InThreadCxt;
    
    
    
    protected List<String> rest;
    
    
    
    protected List<JavaSrc.Java4CAnnotationVariable> java4CAnnotationVariable;
    
    
    
    protected List<Integer> fixArraySize;
    
    
    
    protected List<String> string;
    
    
    
    protected List<JavaSrc.Java4CAnnotationMethod> java4CAnnotationMethod;
    
    
    
    protected List<String> auxDescription;
    
    
    
    
    /**Access to parse result.*/
    public String get_text() { return text; }
    
    
    
    
    /**Access to parse result.*/
    public String get_sizeofDescription() { return sizeofDescription; }
    
    
    
    
    /**Access to parse result.*/
    public JavaSrc.ReturnDescription get_returnDescription() { return returnDescription; }
    
    
    
    
    /**Access to parse result, get the elements of the container paramInDescription*/
    public Iterable<JavaSrc.ParamInDescription> get_paramInDescription() { return paramInDescription; }
    
    /**Access to parse result, get the size of the container paramInDescription.*/
    public int getSize_paramInDescription() { return paramInDescription ==null ? 0 : paramInDescription.size(); }
    
    
    
    
    /**Access to parse result.*/
    public String get_staticInstance() { return staticInstance; }
    
    
    
    
    /**Access to parse result, get the elements of the container xxxfixStringBuffer*/
    public Iterable<String> get_xxxfixStringBuffer() { return xxxfixStringBuffer; }
    
    /**Access to parse result, get the size of the container xxxfixStringBuffer.*/
    public int getSize_xxxfixStringBuffer() { return xxxfixStringBuffer ==null ? 0 : xxxfixStringBuffer.size(); }
    
    
    
    
    /**Access to parse result, get the elements of the container simpleArray*/
    public Iterable<String> get_simpleArray() { return simpleArray; }
    
    /**Access to parse result, get the size of the container simpleArray.*/
    public int getSize_simpleArray() { return simpleArray ==null ? 0 : simpleArray.size(); }
    
    
    
    
    /**Access to parse result, get the elements of the container simpleVariableRef*/
    public Iterable<String> get_simpleVariableRef() { return simpleVariableRef; }
    
    /**Access to parse result, get the size of the container simpleVariableRef.*/
    public int getSize_simpleVariableRef() { return simpleVariableRef ==null ? 0 : simpleVariableRef.size(); }
    
    
    
    
    /**Access to parse result, get the elements of the container embeddedYElements*/
    public Iterable<String> get_embeddedYElements() { return embeddedYElements; }
    
    /**Access to parse result, get the size of the container embeddedYElements.*/
    public int getSize_embeddedYElements() { return embeddedYElements ==null ? 0 : embeddedYElements.size(); }
    
    
    
    
    /**Access to parse result, get the elements of the container noObject*/
    public Iterable<String> get_noObject() { return noObject; }
    
    /**Access to parse result, get the size of the container noObject.*/
    public int getSize_noObject() { return noObject ==null ? 0 : noObject.size(); }
    
    
    
    
    /**Access to parse result, get the elements of the container noGC*/
    public Iterable<String> get_noGC() { return noGC; }
    
    /**Access to parse result, get the size of the container noGC.*/
    public int getSize_noGC() { return noGC ==null ? 0 : noGC.size(); }
    
    
    
    
    /**Access to parse result, get the elements of the container nonPersistent*/
    public Iterable<String> get_nonPersistent() { return nonPersistent; }
    
    /**Access to parse result, get the size of the container nonPersistent.*/
    public int getSize_nonPersistent() { return nonPersistent ==null ? 0 : nonPersistent.size(); }
    
    
    
    
    /**Access to parse result, get the elements of the container stackInstance*/
    public Iterable<String> get_stackInstance() { return stackInstance; }
    
    /**Access to parse result, get the size of the container stackInstance.*/
    public int getSize_stackInstance() { return stackInstance ==null ? 0 : stackInstance.size(); }
    
    
    
    
    /**Access to parse result, get the elements of the container zeroTermString*/
    public Iterable<String> get_zeroTermString() { return zeroTermString; }
    
    /**Access to parse result, get the size of the container zeroTermString.*/
    public int getSize_zeroTermString() { return zeroTermString ==null ? 0 : zeroTermString.size(); }
    
    
    
    
    /**Access to parse result, get the elements of the container ByteStringJc*/
    public Iterable<String> get_ByteStringJc() { return byteStringJc; }
    
    /**Access to parse result, get the size of the container ByteStringJc.*/
    public int getSize_ByteStringJc() { return byteStringJc ==null ? 0 : byteStringJc.size(); }
    
    
    
    
    /**Access to parse result, get the elements of the container return_this*/
    public Iterable<String> get_return_this() { return return_this; }
    
    /**Access to parse result, get the size of the container return_this.*/
    public int getSize_return_this() { return return_this ==null ? 0 : return_this.size(); }
    
    
    
    
    /**Access to parse result, get the elements of the container return_new*/
    public Iterable<String> get_return_new() { return return_new; }
    
    /**Access to parse result, get the size of the container return_new.*/
    public int getSize_return_new() { return return_new ==null ? 0 : return_new.size(); }
    
    
    
    
    /**Access to parse result, get the elements of the container dynamic_call*/
    public Iterable<String> get_dynamic_call() { return dynamic_call; }
    
    /**Access to parse result, get the size of the container dynamic_call.*/
    public int getSize_dynamic_call() { return dynamic_call ==null ? 0 : dynamic_call.size(); }
    
    
    
    
    /**Access to parse result, get the elements of the container xxxoverride_able*/
    public Iterable<String> get_xxxoverride_able() { return xxxoverride_able; }
    
    /**Access to parse result, get the size of the container xxxoverride_able.*/
    public int getSize_xxxoverride_able() { return xxxoverride_able ==null ? 0 : xxxoverride_able.size(); }
    
    
    
    
    /**Access to parse result, get the elements of the container noThCxt*/
    public Iterable<String> get_noThCxt() { return noThCxt; }
    
    /**Access to parse result, get the size of the container noThCxt.*/
    public int getSize_noThCxt() { return noThCxt ==null ? 0 : noThCxt.size(); }
    
    
    
    
    /**Access to parse result, get the elements of the container noStacktrace*/
    public Iterable<String> get_noStacktrace() { return noStacktrace; }
    
    /**Access to parse result, get the size of the container noStacktrace.*/
    public int getSize_noStacktrace() { return noStacktrace ==null ? 0 : noStacktrace.size(); }
    
    
    
    
    /**Access to parse result, get the elements of the container instanceTypeTag*/
    public Iterable<String> get_instanceTypeTag() { return instanceTypeTag; }
    
    /**Access to parse result, get the size of the container instanceTypeTag.*/
    public int getSize_instanceTypeTag() { return instanceTypeTag ==null ? 0 : instanceTypeTag.size(); }
    
    
    
    
    /**Access to parse result, get the elements of the container embeddedTypeTag*/
    public Iterable<String> get_embeddedTypeTag() { return embeddedTypeTag; }
    
    /**Access to parse result, get the size of the container embeddedTypeTag.*/
    public int getSize_embeddedTypeTag() { return embeddedTypeTag ==null ? 0 : embeddedTypeTag.size(); }
    
    
    
    
    /**Access to parse result, get the elements of the container stackSize*/
    public Iterable<String> get_stackSize() { return stackSize; }
    
    /**Access to parse result, get the size of the container stackSize.*/
    public int getSize_stackSize() { return stackSize ==null ? 0 : stackSize.size(); }
    
    
    
    
    /**Access to parse result, get the elements of the container bytes*/
    public Iterable<Integer> get_bytes() { return bytes; }
    
    /**Access to parse result, get the size of the container bytes.*/
    public int getSize_bytes() { return bytes ==null ? 0 : bytes.size(); }
    
    
    
    
    /**Access to parse result, get the elements of the container typeStack*/
    public Iterable<String> get_typeStack() { return typeStack; }
    
    /**Access to parse result, get the size of the container typeStack.*/
    public int getSize_typeStack() { return typeStack ==null ? 0 : typeStack.size(); }
    
    
    
    
    /**Access to parse result, get the elements of the container toStringNonPersist*/
    public Iterable<String> get_toStringNonPersist() { return toStringNonPersist; }
    
    /**Access to parse result, get the size of the container toStringNonPersist.*/
    public int getSize_toStringNonPersist() { return toStringNonPersist ==null ? 0 : toStringNonPersist.size(); }
    
    
    
    
    /**Access to parse result, get the elements of the container declarePersist*/
    public Iterable<String> get_declarePersist() { return declarePersist; }
    
    /**Access to parse result, get the size of the container declarePersist.*/
    public int getSize_declarePersist() { return declarePersist ==null ? 0 : declarePersist.size(); }
    
    
    
    
    /**Access to parse result, get the elements of the container StringBuilderInStack*/
    public Iterable<Integer> get_StringBuilderInStack() { return stringBuilderInStack; }
    
    /**Access to parse result, get the size of the container StringBuilderInStack.*/
    public int getSize_StringBuilderInStack() { return stringBuilderInStack ==null ? 0 : stringBuilderInStack.size(); }
    
    
    
    
    /**Access to parse result, get the elements of the container StringBuilderInThreadCxt*/
    public Iterable<String> get_StringBuilderInThreadCxt() { return stringBuilderInThreadCxt; }
    
    /**Access to parse result, get the size of the container StringBuilderInThreadCxt.*/
    public int getSize_StringBuilderInThreadCxt() { return stringBuilderInThreadCxt ==null ? 0 : stringBuilderInThreadCxt.size(); }
    
    
    
    
    /**Access to parse result, get the elements of the container return_InThreadCxt*/
    public Iterable<String> get_return_InThreadCxt() { return return_InThreadCxt; }
    
    /**Access to parse result, get the size of the container return_InThreadCxt.*/
    public int getSize_return_InThreadCxt() { return return_InThreadCxt ==null ? 0 : return_InThreadCxt.size(); }
    
    
    
    
    /**Access to parse result, get the elements of the container rest*/
    public Iterable<String> get_rest() { return rest; }
    
    /**Access to parse result, get the size of the container rest.*/
    public int getSize_rest() { return rest ==null ? 0 : rest.size(); }
    
    
    
    
    /**Access to parse result, get the elements of the container Java4CAnnotationVariable*/
    public Iterable<JavaSrc.Java4CAnnotationVariable> get_Java4CAnnotationVariable() { return java4CAnnotationVariable; }
    
    /**Access to parse result, get the size of the container Java4CAnnotationVariable.*/
    public int getSize_Java4CAnnotationVariable() { return java4CAnnotationVariable ==null ? 0 : java4CAnnotationVariable.size(); }
    
    
    
    
    /**Access to parse result, get the elements of the container fixArraySize*/
    public Iterable<Integer> get_fixArraySize() { return fixArraySize; }
    
    /**Access to parse result, get the size of the container fixArraySize.*/
    public int getSize_fixArraySize() { return fixArraySize ==null ? 0 : fixArraySize.size(); }
    
    
    
    
    /**Access to parse result, get the elements of the container string*/
    public Iterable<String> get_string() { return string; }
    
    /**Access to parse result, get the size of the container string.*/
    public int getSize_string() { return string ==null ? 0 : string.size(); }
    
    
    
    
    /**Access to parse result, get the elements of the container Java4CAnnotationMethod*/
    public Iterable<JavaSrc.Java4CAnnotationMethod> get_Java4CAnnotationMethod() { return java4CAnnotationMethod; }
    
    /**Access to parse result, get the size of the container Java4CAnnotationMethod.*/
    public int getSize_Java4CAnnotationMethod() { return java4CAnnotationMethod ==null ? 0 : java4CAnnotationMethod.size(); }
    
    
    
    
    /**Access to parse result, get the elements of the container auxDescription*/
    public Iterable<String> get_auxDescription() { return auxDescription; }
    
    /**Access to parse result, get the size of the container auxDescription.*/
    public int getSize_auxDescription() { return auxDescription ==null ? 0 : auxDescription.size(); }
    
    
  
  }




  /**Class for Component throwsDeclaration. */
  public static class ThrowsDeclaration_Base extends SrcInfo {
  
  
  
  }




  /**Class for Component try_statement. */
  public static class Try_statement_Base extends SrcInfo {
  
  
    
    protected JavaSrc.StatementBlock statementBlock;
    
    
    
    protected List<JavaSrc.CatchBlock> catchBlock;
    
    
    
    protected JavaSrc.StatementBlock finallyBlock;
    
    
    
    
    /**Access to parse result.*/
    public JavaSrc.StatementBlock get_statementBlock() { return statementBlock; }
    
    
    
    
    /**Access to parse result, get the elements of the container catchBlock*/
    public Iterable<JavaSrc.CatchBlock> get_catchBlock() { return catchBlock; }
    
    /**Access to parse result, get the size of the container catchBlock.*/
    public int getSize_catchBlock() { return catchBlock ==null ? 0 : catchBlock.size(); }
    
    
    
    
    /**Access to parse result.*/
    public JavaSrc.StatementBlock get_finallyBlock() { return finallyBlock; }
    
    
  
  }




  /**Class for Component type. */
  public static class Type_Base extends SrcInfo {
  
  
    
    protected JavaSrc.EnvIdent envIdent;
    
    
    
    protected String name;
    
    
    
    protected List<String> undefGenericType;
    
    
    
    protected List<JavaSrc.Type> genericType;
    
    
    
    protected List<JavaSrc.Type> baseGenericKey;
    
    
    
    protected String va_arg;
    
    
    
    protected List<String> typeArray;
    
    
    
    
    /**Access to parse result.*/
    public JavaSrc.EnvIdent get_envIdent() { return envIdent; }
    
    
    
    
    /**Access to parse result.*/
    public String get_name() { return name; }
    
    
    
    
    /**Access to parse result, get the elements of the container undefGenericType*/
    public Iterable<String> get_undefGenericType() { return undefGenericType; }
    
    /**Access to parse result, get the size of the container undefGenericType.*/
    public int getSize_undefGenericType() { return undefGenericType ==null ? 0 : undefGenericType.size(); }
    
    
    
    
    /**Access to parse result, get the elements of the container GenericType*/
    public Iterable<JavaSrc.Type> get_GenericType() { return genericType; }
    
    /**Access to parse result, get the size of the container GenericType.*/
    public int getSize_GenericType() { return genericType ==null ? 0 : genericType.size(); }
    
    
    
    
    /**Access to parse result, get the elements of the container baseGenericKey*/
    public Iterable<JavaSrc.Type> get_baseGenericKey() { return baseGenericKey; }
    
    /**Access to parse result, get the size of the container baseGenericKey.*/
    public int getSize_baseGenericKey() { return baseGenericKey ==null ? 0 : baseGenericKey.size(); }
    
    
    
    
    /**Access to parse result.*/
    public String get_va_arg() { return va_arg; }
    
    
    
    
    /**Access to parse result, get the elements of the container typeArray*/
    public Iterable<String> get_typeArray() { return typeArray; }
    
    /**Access to parse result, get the size of the container typeArray.*/
    public int getSize_typeArray() { return typeArray ==null ? 0 : typeArray.size(); }
    
    
  
  }




  /**Class for Component typeIdent. */
  public static class TypeIdent_Base extends SrcInfo {
  
  
    
    protected JavaSrc.EnvIdent envIdent;
    
    
    
    protected String name;
    
    
    
    protected List<String> undefGenericType;
    
    
    
    protected List<JavaSrc.Type> genericType;
    
    
    
    protected List<JavaSrc.Type> baseGenericKey;
    
    
    
    
    /**Access to parse result.*/
    public JavaSrc.EnvIdent get_envIdent() { return envIdent; }
    
    
    
    
    /**Access to parse result.*/
    public String get_name() { return name; }
    
    
    
    
    /**Access to parse result, get the elements of the container undefGenericType*/
    public Iterable<String> get_undefGenericType() { return undefGenericType; }
    
    /**Access to parse result, get the size of the container undefGenericType.*/
    public int getSize_undefGenericType() { return undefGenericType ==null ? 0 : undefGenericType.size(); }
    
    
    
    
    /**Access to parse result, get the elements of the container GenericType*/
    public Iterable<JavaSrc.Type> get_GenericType() { return genericType; }
    
    /**Access to parse result, get the size of the container GenericType.*/
    public int getSize_GenericType() { return genericType ==null ? 0 : genericType.size(); }
    
    
    
    
    /**Access to parse result, get the elements of the container baseGenericKey*/
    public Iterable<JavaSrc.Type> get_baseGenericKey() { return baseGenericKey; }
    
    /**Access to parse result, get the size of the container baseGenericKey.*/
    public int getSize_baseGenericKey() { return baseGenericKey ==null ? 0 : baseGenericKey.size(); }
    
    
  
  }




  /**Class for Component unaryOperator. */
  public static class UnaryOperator_Base extends SrcInfo {
  
  
    
    protected String unaryOperator;
    
    
    
    
    /**Access to parse result.*/
    public String get_unaryOperator() { return unaryOperator; }
    
    
  
  }




  /**Class for Component variableDefinition. */
  public static class VariableDefinition_Base extends SrcInfo {
  
  
    
    protected List<JavaSrc.VariableInstance> variableDefinition;
    
    
    
    
    /**Access to parse result, get the elements of the container variableDefinition*/
    public Iterable<JavaSrc.VariableInstance> get_variableDefinition() { return variableDefinition; }
    
    /**Access to parse result, get the size of the container variableDefinition.*/
    public int getSize_variableDefinition() { return variableDefinition ==null ? 0 : variableDefinition.size(); }
    
    
  
  }




  /**Class for Component variableInstance. */
  public static class VariableInstance_Base extends SrcInfo {
  
  
    
    protected JavaSrc.Description description;
    
    
    
    protected JavaSrc.ModifierVariable modifierVariable;
    
    
    
    protected JavaSrc.Type type;
    
    
    
    protected String variableName;
    
    
    
    protected String array;
    
    
    
    protected JavaSrc.NewArray newArray;
    
    
    
    protected JavaSrc.ConstArray constArray;
    
    
    
    protected JavaSrc.Expression expression;
    
    
    
    
    /**Access to parse result.*/
    public JavaSrc.Description get_description() { return description; }
    
    
    
    
    /**Access to parse result.*/
    public JavaSrc.ModifierVariable get_ModifierVariable() { return modifierVariable; }
    
    
    
    
    /**Access to parse result.*/
    public JavaSrc.Type get_type() { return type; }
    
    
    
    
    /**Access to parse result.*/
    public String get_variableName() { return variableName; }
    
    
    
    
    /**Access to parse result.*/
    public String get_array() { return array; }
    
    
    
    
    /**Access to parse result.*/
    public JavaSrc.NewArray get_newArray() { return newArray; }
    
    
    
    
    /**Access to parse result.*/
    public JavaSrc.ConstArray get_constArray() { return constArray; }
    
    
    
    
    /**Access to parse result.*/
    public JavaSrc.Expression get_Expression() { return expression; }
    
    
  
  }




  /**Class for Component while_statement. */
  public static class While_statement_Base extends SrcInfo {
  
  
    
    protected JavaSrc.Expression expression;
    
    
    
    protected JavaSrc.Statement statement;
    
    
    
    
    /**Access to parse result.*/
    public JavaSrc.Expression get_Expression() { return expression; }
    
    
    
    
    /**Access to parse result.*/
    public JavaSrc.Statement get_statement() { return statement; }
    
    
  
  }




  /**Class for Component ExprPart. */
  public static class ExprPart_Base extends SrcInfo {
  
  
    
    protected JavaSrc.SimpleValue value;
    
    
    
    protected String operator;
    
    
    
    
    /**Access to parse result.*/
    public JavaSrc.SimpleValue get_value() { return value; }
    
    
    
    
    /**Access to parse result.*/
    public String get_operator() { return operator; }
    
    
  
  }




  /**Class for Component enumElement. */
  public static class EnumElement_Base extends SrcInfo {
  
  
    
    protected String enumIdent;
    
    
    
    protected JavaSrc.ActualArguments actualArguments;
    
    
    
    
    /**Access to parse result.*/
    public String get_enumIdent() { return enumIdent; }
    
    
    
    
    /**Access to parse result.*/
    public JavaSrc.ActualArguments get_actualArguments() { return actualArguments; }
    
    
  
  }


}

